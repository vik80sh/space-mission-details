{"version":3,"sources":["atoms/CustomButton.js","constant.js","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["CustomButton","text","onClick","classValue","className","APIs","Home","props","state","selectedYear","isSuccessfulLaunch","isSuccessfullLand","flightData","loader","missionYearUI","bind","successfulLaunchUI","filterFunction","cardUI","axios","get","then","res","setState","data","api","year","successfullLaunching","successfullLanding","url","yearFilter","landingFilter","launchingFilter","this","Array","map","e","i","makeButtonBold","key","src","links","mission_patch","alt","mission_name","mission_id","length","launch_year","launch_success","rocket","first_stage","cores","land_success","successfullLandUI","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","hydrate","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4TAMeA,G,MAFM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAjB,OAAkC,4BAAQC,UAAS,qBAAgBD,GAAcD,QAASA,GAAUD,KCJ5GI,EACH,kD,gBCKWC,G,wDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,aAAc,GACdC,mBAAoB,GACpBC,kBAAmB,GACnBC,WAAY,GACZC,QAAQ,GAEZ,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAbC,E,gEAgBE,IAAD,OACLI,IAAMC,IAAIf,GAChBgB,MAAK,SAAAC,GACN,EAAKC,SAAS,CAAEX,WAAYU,EAAIE,KAAMC,IAAKpB,EAAUQ,QAAQ,S,qCAGtDa,EAAMC,EAAsBC,GAAqB,IAAD,OACvDC,EAAMxB,EACNyB,EAAa,GACbC,EAAgB,GAChBC,EAAkB,GAEtB,GADAC,KAAKV,SAAS,CAAEV,QAAQ,IACpBa,EACAI,EAAa,gBAAkBJ,EAC3BO,KAAKzB,MAAME,qBACXsB,EAAkB,kBAAoBC,KAAKzB,MAAME,oBACjDuB,KAAKzB,MAAMG,oBACXoB,EAAgB,gBAAkBE,KAAKzB,MAAMG,mBAC7CsB,KAAKzB,MAAMC,eAAiBiB,IAC5BA,EAAO,GACPI,EAAa,IAEjBD,EAAMA,EAAMG,EAAkBD,EAAgBD,EACnCX,IAAMC,IAAIS,GAChBR,MAAK,SAAAC,GACN,EAAKC,SAAS,CAAEX,WAAYU,EAAIE,KAAMX,QAAQ,EAAOJ,aAAciB,YAGtE,GAAIC,EAAsB,CAC3BK,EAAkB,mBAAqBL,EACnCM,KAAKzB,MAAMC,eACXqB,EAAa,gBAAkBG,KAAKzB,MAAMC,cAC1CwB,KAAKzB,MAAMG,oBACXoB,EAAgB,iBAAmBE,KAAKzB,MAAMG,mBAC9CsB,KAAKzB,MAAME,qBAAuBiB,IAClCK,EAAkB,GAClBL,EAAuB,IAE3BE,EAAMA,EAAMG,EAAkBD,EAAgBD,EACnCX,IAAMC,IAAIS,GAChBR,MAAK,SAAAC,GACN,EAAKC,SAAS,CAAEX,WAAYU,EAAIE,KAAMX,QAAQ,EAAOH,mBAAoBiB,WAE1E,CACHI,EAAgB,mBAAqBH,EACjCK,KAAKzB,MAAMC,eACXqB,EAAa,gBAAkBG,KAAKzB,MAAMC,cAC1CwB,KAAKzB,MAAME,qBACXsB,EAAkB,mBAAqBC,KAAKzB,MAAME,oBAClDuB,KAAKzB,MAAMG,oBAAsBiB,IACjCG,EAAgB,GAChBH,EAAqB,IAEzBC,EAAMA,EAAMG,EAAkBD,EAAgBD,EACnCX,IAAMC,IAAIS,GAChBR,MAAK,SAAAC,GACN,EAAKC,SAAS,CAAEX,WAAYU,EAAIE,KAAMX,QAAQ,EAAOF,kBAAmBiB,U,sCAInE,IAAD,OACZ,OAAO,yBAAKxB,UAAU,OAClB,uBAAGA,UAAU,4BAAb,eACC,YAAI8B,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAEpB,IAAIC,GADJD,EAAI,KAAOA,KACgB,EAAK7B,MAAMC,aAAe,kBAAoB,GACzE,OAAO,yBAAKL,UAAU,oBAAoBmC,IAAKF,GAC3C,kBAAC,EAAD,CAAcpC,KAAMoC,EAAGlC,WAAYmC,EAAgBpC,QAAS,kBAAM,EAAKe,eAAeoB,GAAG,GAAO,a,2CAM1F,IAAD,OACjB,OAAO,yBAAKjC,UAAU,0BAClB,uBAAGA,UAAU,4BAAb,sBACA,yBAAKA,UAAU,qBAAoB,kBAAC,EAAD,CAAcH,KAAK,OAAOE,WAA8C,SAAlC8B,KAAKzB,MAAME,mBAAgC,kBAAoB,GAAIR,QAAS,kBAAM,EAAKe,gBAAe,EAAO,QAAQ,OAC9L,yBAAKb,UAAU,qBAAoB,kBAAC,EAAD,CAAcH,KAAK,QAAQE,WAA8C,UAAlC8B,KAAKzB,MAAME,mBAAiC,kBAAoB,GAAIR,QAAS,kBAAM,EAAKe,gBAAe,EAAO,SAAS,U,0CAGpL,IAAD,OAChB,OAAO,yBAAKb,UAAU,0BAClB,uBAAGA,UAAU,4BAAb,oBACA,yBAAKA,UAAU,qBAAoB,kBAAC,EAAD,CAAcH,KAAK,OAAOE,WAA6C,SAAjC8B,KAAKzB,MAAMG,kBAA+B,kBAAoB,GAAIT,QAAS,kBAAM,EAAKe,gBAAe,GAAO,EAAO,YAC5L,yBAAKb,UAAU,qBAAoB,kBAAC,EAAD,CAAcH,KAAK,QAAQE,WAA6C,UAAjC8B,KAAKzB,MAAMG,kBAAgC,kBAAoB,GAAIT,QAAS,kBAAM,EAAKe,gBAAe,GAAO,EAAO,gB,+BAKlM,OAAOgB,KAAKzB,MAAMI,WAAWuB,KAAI,SAACX,EAAMa,GACpC,OAAO,yBAAKjC,UAAU,4EAA4EmC,IAAKF,GACnG,yBAAKjC,UAAU,kBACX,yBAAKA,UAAU,iBACX,yBAAKoC,IAAKhB,EAAKiB,MAAMC,cAAeC,IAAKnB,EAAKoB,aAAe,WAEjE,uBAAGxC,UAAU,gBAAe,2BAAIoB,EAAKoB,aAAT,KAA5B,KACA,uBAAGxC,UAAU,cAAa,gDAA1B,KACA,wBAAIA,UAAU,kBAAkBoB,EAAKqB,WAAWC,OAAStB,EAAKqB,WAAW,GAAK,eAC9E,uBAAGzC,UAAU,eAAc,kDAA+B,8BAAOoB,EAAKuB,cACtE,uBAAG3C,UAAU,WAAU,yDAAsC,8BAAOoB,EAAKwB,eAAiB,OAAS,UACnG,uBAAG5C,UAAU,WAAU,0DAAuC,8BAAOoB,EAAKyB,OAAOC,YAAYC,MAAM,GAAGC,aAAe,OAAS,iB,+BAM1I,OACI,6BAAShD,UAAU,oBACd6B,KAAKzB,MAAMK,QAAU,yBAAKT,UAAU,mBAAkB,yBAAKA,UAAU,YACtE,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,kBACX,uCACC6B,KAAKnB,gBACLmB,KAAKjB,qBACLiB,KAAKoB,sBAGd,yBAAKjD,UAAU,uDACX,yBAAKA,UAAU,oBACV6B,KAAKzB,MAAMI,YAAcqB,KAAKzB,MAAMI,WAAWkC,OAAS,EAAIb,KAAKf,SAAW,sD,GAxInEoC,cCSnBC,MAXf,WACE,OACE,6BAASnD,UAAU,mBACjB,sDACE,kBAAC,EAAD,MAEA,yBAAKA,UAAU,kBAAf,gBAA6C,sECE/CoD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1C,MAAK,SAAA+C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9D,QACfyD,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,MCxFjEC,IAASC,QACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,GAAN,sBAEP9B,IAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BtE,MAAK,SAAAuE,GAEJ,IAAMC,EAAcD,EAASD,QAAQvE,IAAI,gBAEnB,MAApBwE,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM3E,MAAK,SAAA+C,GACjCA,EAAa6B,aAAa5E,MAAK,WAC7BqC,OAAOC,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM3E,MAAK,WACjCqD,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OChC/BE,K","file":"static/js/main.811ab820.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './CustomButton.css'\r\n\r\nconst CustomButton = ({text, onClick, classValue}) =>  <button className={`custom-btn ${classValue}`} onClick={onClick}>{text}</button>\r\n   \r\nexport default CustomButton;\r\n","export const APIs = {\r\n    all : 'https://api.spaceXdata.com/v3/launches?limit=24',\r\n}","import React, { Component } from 'react'\r\nimport CustomButton from './../atoms/CustomButton';\r\nimport { APIs } from './../constant';\r\nimport axios from 'axios'\r\nimport './Home.css'\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedYear: \"\",\r\n            isSuccessfulLaunch: \"\",\r\n            isSuccessfullLand: \"\",\r\n            flightData: [],\r\n            loader: true\r\n        }\r\n        this.missionYearUI = this.missionYearUI.bind(this);\r\n        this.successfulLaunchUI = this.successfulLaunchUI.bind(this);\r\n        this.successfulLaunchUI = this.successfulLaunchUI.bind(this);\r\n        this.filterFunction = this.filterFunction.bind(this);\r\n        this.cardUI = this.cardUI.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        let data = axios.get(APIs.all);\r\n        data.then(res => {\r\n            this.setState({ flightData: res.data, api: APIs.all, loader: false })\r\n        })\r\n    }\r\n    filterFunction(year, successfullLaunching, successfullLanding) {\r\n        let url = APIs.all;\r\n        let yearFilter = \"\";\r\n        let landingFilter = \"\";\r\n        let launchingFilter = \"\";\r\n        this.setState({ loader: true });\r\n        if (year) {\r\n            yearFilter = '&launch_year=' + year;\r\n            if (this.state.isSuccessfulLaunch)\r\n                launchingFilter = 'launch_success=' + this.state.isSuccessfulLaunch\r\n            if (this.state.isSuccessfullLand)\r\n                landingFilter = 'land_success=' + this.state.isSuccessfullLand\r\n            if (this.state.selectedYear === year) {\r\n                year = \"\";\r\n                yearFilter = \"\";\r\n            }\r\n            url = url + launchingFilter + landingFilter + yearFilter;\r\n            let data = axios.get(url);\r\n            data.then(res => {\r\n                this.setState({ flightData: res.data, loader: false, selectedYear: year })\r\n            })\r\n        }\r\n        else if (successfullLaunching) {\r\n            launchingFilter = '&launch_success=' + successfullLaunching;\r\n            if (this.state.selectedYear)\r\n                yearFilter = '&launch_year=' + this.state.selectedYear;\r\n            if (this.state.isSuccessfullLand)\r\n                landingFilter = '&land_success=' + this.state.isSuccessfullLand;\r\n            if (this.state.isSuccessfulLaunch === successfullLaunching) {\r\n                launchingFilter = \"\";\r\n                successfullLaunching = \"\";\r\n            }\r\n            url = url + launchingFilter + landingFilter + yearFilter;\r\n            let data = axios.get(url);\r\n            data.then(res => {\r\n                this.setState({ flightData: res.data, loader: false, isSuccessfulLaunch: successfullLaunching })\r\n            })\r\n        } else {\r\n            landingFilter = '&launch_success=' + successfullLanding;\r\n            if (this.state.selectedYear)\r\n                yearFilter = '&launch_year=' + this.state.selectedYear;\r\n            if (this.state.isSuccessfulLaunch)\r\n                launchingFilter = '&launch_success=' + this.state.isSuccessfulLaunch\r\n            if (this.state.isSuccessfullLand === successfullLanding) {\r\n                landingFilter = \"\";\r\n                successfullLanding = \"\";\r\n            }\r\n            url = url + launchingFilter + landingFilter + yearFilter;\r\n            let data = axios.get(url);\r\n            data.then(res => {\r\n                this.setState({ flightData: res.data, loader: false, isSuccessfullLand: successfullLanding })\r\n            })\r\n        }\r\n    }\r\n    missionYearUI() {\r\n        return <div className=\"row\">\r\n            <p className=\"filter-title text-center\">Launch Year</p>\r\n            {[...Array(15)].map((e, i) => {\r\n                i = 2006 + i;\r\n                let makeButtonBold = i === this.state.selectedYear ? \"button-selected\" : \"\";\r\n                return <div className=\"col-6 text-center\" key={i}>\r\n                    <CustomButton text={i} classValue={makeButtonBold} onClick={() => this.filterFunction(i, false, false)} />\r\n                </div>\r\n            })\r\n            }\r\n        </div>\r\n    }\r\n    successfulLaunchUI() {\r\n        return <div className=\"row successfull-launch\">\r\n            <p className=\"filter-title text-center\">Successfull Launch</p>\r\n            <div className=\"col-6 text-center\"><CustomButton text=\"true\" classValue={this.state.isSuccessfulLaunch === \"true\" ? \"button-selected\" : \"\"} onClick={() => this.filterFunction(false, \"true\", false)} /></div>\r\n            <div className=\"col-6 text-center\"><CustomButton text=\"false\" classValue={this.state.isSuccessfulLaunch === \"false\" ? \"button-selected\" : \"\"} onClick={() => this.filterFunction(false, \"false\", false)} /></div>\r\n        </div>\r\n    }\r\n    successfullLandUI() {\r\n        return <div className=\"row successfull-launch\">\r\n            <p className=\"filter-title text-center\">Successfull Land</p>\r\n            <div className=\"col-6 text-center\"><CustomButton text=\"true\" classValue={this.state.isSuccessfullLand === \"true\" ? \"button-selected\" : \"\"} onClick={() => this.filterFunction(false, false, \"true\")} /></div>\r\n            <div className=\"col-6 text-center\"><CustomButton text=\"false\" classValue={this.state.isSuccessfullLand === \"false\" ? \"button-selected\" : \"\"} onClick={() => this.filterFunction(false, false, \"false\")} /></div>\r\n        </div>\r\n    }\r\n\r\n    cardUI() {\r\n        return this.state.flightData.map((data, i) => {\r\n            return <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 d-flex align-items-stretch card-wrapper\" key={i}>\r\n                <div className=\"card-container\">\r\n                    <div className=\"image-wrapper\">\r\n                        <img src={data.links.mission_patch} alt={data.mission_name + \"image\"} />\r\n                    </div>\r\n                    <p className=\"mission-name\"><b>{data.mission_name} </b> </p>\r\n                    <p className=\"mission-id\"><strong>Mission Ids </strong> </p>\r\n                    <li className=\"mission-id-res\">{data.mission_id.length ? data.mission_id[0] : \"Not Present\"}</li>\r\n                    <p className=\"launch-year\"><strong>Launch Year : </strong><span>{data.launch_year}</span></p>\r\n                    <p className=\"success\"><strong>Successfull Launch : </strong><span>{data.launch_success ? \"true\" : \"false\"}</span></p>\r\n                    <p className=\"landing\"><strong>Successfull Landing : </strong><span>{data.rocket.first_stage.cores[0].land_success ? \"true\" : \"false\"}</span></p>\r\n                </div>\r\n            </div>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"row home-wrapper\">\r\n                {this.state.loader && <div className=\"spinner-loading\"><div className=\"loader\"></div></div>}\r\n                <div className=\"col-12 col-sm-4 col-md-3 col-lg-2\">\r\n                    <div className=\"filter-section\">\r\n                        <h3>Filters</h3>\r\n                        {this.missionYearUI()}\r\n                        {this.successfulLaunchUI()}\r\n                        {this.successfullLandUI()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-8 col-md-9 col-lg-10  mission-details\">\r\n                    <div className=\"row card-wrapper\">\r\n                        {this.state.flightData && this.state.flightData.length > 0 ? this.cardUI() : <h1>No Result found</h1>}\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Home from './component/Home'; \n\nfunction App() {\n  return (\n    <section className=\"container-fluid\">\n      <h1>SpacEx Launch Programs</h1>\n        <Home/>\n        \n        <div className=\"developer-name\">Developed By <strong>Vikash Gupta, vik80sh@gmail.com</strong></div>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}